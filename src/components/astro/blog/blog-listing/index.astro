---
type BlogListing = {
	title: string;
	uri: `/${string}`;
	seriesLength?: number;
	publishedDate: Date;
};

type Props = { listings: Array<BlogListing> };

const { listings } = Astro.props;
---

<ul class="flex flex-col gap-5">
	{
		listings.map((listing) => (
			<li>
				<a
					href={listing.uri}
					class="rounded-sm text-text-neutral-hc underline decoration-ui-seperator-neutral-lc underline-offset-4 hover:decoration-ui-seperator-neutral-hc focus-visible:ring-2 focus-visible:ring-ui-neutral-focus-ring focus-visible:ring-offset-2"
				>
					{listing.title}
				</a>
				<p class="mt-1 flex flex-wrap items-center gap-2 text-sm">
					<time datetime={listing.publishedDate.toISOString()}>{listing.publishedDate.toDateString()}</time>
					{listing.seriesLength && <span>- ({listing.seriesLength} part series)</span>}
				</p>
			</li>
		))
	}
</ul>
